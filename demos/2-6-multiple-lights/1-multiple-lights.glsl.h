#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline:
        sokol-shdc -i .\1-multiple-lights.glsl -o .\1-multiple-lights.glsl.h -l glsl430:glsl300es

    Overview:
    =========
    Shader program: 'light_cube':
        Get shader desc: light_cube_shader_desc(sg_query_backend());
        Vertex Shader: light_cube_vs
        Fragment Shader: light_cube_fs
        Attributes:
            ATTR_light_cube_aPos => 0
    Shader program: 'phong':
        Get shader desc: phong_shader_desc(sg_query_backend());
        Vertex Shader: vs
        Fragment Shader: fs
        Attributes:
            ATTR_phong_aPos => 0
            ATTR_phong_aNormal => 1
            ATTR_phong_aTexCoords => 2
    Bindings:
        Uniform block 'vs_params':
            C struct: vs_params_t
            Bind slot: UB_vs_params => 0
        Uniform block 'light_cube_fs_params':
            C struct: light_cube_fs_params_t
            Bind slot: UB_light_cube_fs_params => 1
        Uniform block 'fs_params':
            C struct: fs_params_t
            Bind slot: UB_fs_params => 1
        Uniform block 'fs_dir_light':
            C struct: fs_dir_light_t
            Bind slot: UB_fs_dir_light => 3
        Uniform block 'fs_point_lights':
            C struct: fs_point_lights_t
            Bind slot: UB_fs_point_lights => 4
        Uniform block 'fs_spot_light':
            C struct: fs_spot_light_t
            Bind slot: UB_fs_spot_light => 5
        Uniform block 'fs_material':
            C struct: fs_material_t
            Bind slot: UB_fs_material => 2
        Image '_diffuse_texture':
            Image type: SG_IMAGETYPE_2D
            Sample type: SG_IMAGESAMPLETYPE_FLOAT
            Multisampled: false
            Bind slot: IMG__diffuse_texture => 0
        Image '_specular_texture':
            Image type: SG_IMAGETYPE_2D
            Sample type: SG_IMAGESAMPLETYPE_FLOAT
            Multisampled: false
            Bind slot: IMG__specular_texture => 1
        Sampler 'diffuse_texture_smp':
            Type: SG_SAMPLERTYPE_FILTERING
            Bind slot: SMP_diffuse_texture_smp => 0
        Sampler 'specular_texture_smp':
            Type: SG_SAMPLERTYPE_FILTERING
            Bind slot: SMP_specular_texture_smp => 1
*/
#if !defined(SOKOL_GFX_INCLUDED)
#error "Please include sokol_gfx.h before 1-multiple-lights.glsl.h"
#endif
#if !defined(SOKOL_SHDC_ALIGN)
#if defined(_MSC_VER)
#define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
#else
#define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
#endif
#endif
#define ATTR_light_cube_aPos (0)
#define ATTR_phong_aPos (0)
#define ATTR_phong_aNormal (1)
#define ATTR_phong_aTexCoords (2)
#define UB_vs_params (0)
#define UB_light_cube_fs_params (1)
#define UB_fs_params (1)
#define UB_fs_dir_light (3)
#define UB_fs_point_lights (4)
#define UB_fs_spot_light (5)
#define UB_fs_material (2)
#define IMG__diffuse_texture (0)
#define IMG__specular_texture (1)
#define SMP_diffuse_texture_smp (0)
#define SMP_specular_texture_smp (1)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct vs_params_t {
    glm::mat4 model;
    glm::mat4 view;
    glm::mat4 projection;
} vs_params_t;
#pragma pack(pop)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct light_cube_fs_params_t {
    glm::vec3 lightColour;
    uint8_t _pad_12[4];
} light_cube_fs_params_t;
#pragma pack(pop)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct fs_params_t {
    glm::vec3 viewPos;
    uint8_t _pad_12[4];
} fs_params_t;
#pragma pack(pop)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct fs_dir_light_t {
    glm::vec3 direction;
    uint8_t _pad_12[4];
    glm::vec3 ambient;
    uint8_t _pad_28[4];
    glm::vec3 diffuse;
    uint8_t _pad_44[4];
    glm::vec3 specular;
    uint8_t _pad_60[4];
} fs_dir_light_t;
#pragma pack(pop)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct fs_point_lights_t {
    glm::vec4 position[4];
    glm::vec4 ambient[4];
    glm::vec4 diffuse[4];
    glm::vec4 specular[4];
    glm::vec4 attenuation[4];
} fs_point_lights_t;
#pragma pack(pop)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct fs_spot_light_t {
    glm::vec3 position;
    uint8_t _pad_12[4];
    glm::vec3 direction;
    float cutOff;
    float outerCutOff;
    uint8_t _pad_36[12];
    glm::vec3 ambient;
    uint8_t _pad_60[4];
    glm::vec3 diffuse;
    uint8_t _pad_76[4];
    glm::vec3 specular;
    float constant;
    float linear;
    float quadratic;
    uint8_t _pad_104[8];
} fs_spot_light_t;
#pragma pack(pop)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct fs_material_t {
    float shininess;
    uint8_t _pad_4[12];
} fs_material_t;
#pragma pack(pop)
/*
    #version 430

    uniform vec4 vs_params[12];
    layout(location = 0) in vec3 aPos;
    layout(location = 0) out vec3 FragPos;
    layout(location = 1) out vec3 Normal;
    layout(location = 1) in vec3 aNormal;
    layout(location = 2) out vec2 TexCoords;
    layout(location = 2) in vec2 aTexCoords;

    void main()
    {
        mat4 _29 = mat4(vs_params[0], vs_params[1], vs_params[2], vs_params[3]);
        vec4 _39 = vec4(aPos, 1.0);
        gl_Position = ((mat4(vs_params[8], vs_params[9], vs_params[10], vs_params[11]) * mat4(vs_params[4], vs_params[5], vs_params[6], vs_params[7])) * _29) * _39;
        FragPos = vec3((_29 * _39).xyz);
        mat4 _61 = transpose(inverse(_29));
        Normal = mat3(_61[0].xyz, _61[1].xyz, _61[2].xyz) * aNormal;
        TexCoords = aTexCoords;
    }

*/
static const uint8_t vs_source_glsl430[733] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x31,0x32,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,
    0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x50,0x6f,0x73,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,
    0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x46,0x72,0x61,0x67,0x50,
    0x6f,0x73,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,
    0x33,0x20,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,
    0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x32,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x54,0x65,
    0x78,0x43,0x6f,0x6f,0x72,0x64,0x73,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,
    0x20,0x76,0x65,0x63,0x32,0x20,0x61,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x73,
    0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x5f,0x32,0x39,0x20,0x3d,0x20,
    0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,
    0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,
    0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,0x20,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x33,0x39,0x20,0x3d,0x20,0x76,0x65,0x63,
    0x34,0x28,0x61,0x50,0x6f,0x73,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x28,0x28,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x38,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x39,
    0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x30,0x5d,
    0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x31,0x5d,0x29,
    0x20,0x2a,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x34,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x35,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x36,0x5d,
    0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x37,0x5d,0x29,0x29,
    0x20,0x2a,0x20,0x5f,0x32,0x39,0x29,0x20,0x2a,0x20,0x5f,0x33,0x39,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x20,0x3d,0x20,0x76,0x65,0x63,
    0x33,0x28,0x28,0x5f,0x32,0x39,0x20,0x2a,0x20,0x5f,0x33,0x39,0x29,0x2e,0x78,0x79,
    0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x5f,0x36,0x31,
    0x20,0x3d,0x20,0x74,0x72,0x61,0x6e,0x73,0x70,0x6f,0x73,0x65,0x28,0x69,0x6e,0x76,
    0x65,0x72,0x73,0x65,0x28,0x5f,0x32,0x39,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6d,0x61,0x74,0x33,0x28,0x5f,0x36,
    0x31,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x5f,0x36,0x31,0x5b,0x31,0x5d,
    0x2e,0x78,0x79,0x7a,0x2c,0x20,0x5f,0x36,0x31,0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,
    0x29,0x20,0x2a,0x20,0x61,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x73,0x20,0x3d,0x20,0x61,0x54,0x65,
    0x78,0x43,0x6f,0x6f,0x72,0x64,0x73,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 430

    struct dir_light_t
    {
        vec3 direction;
        vec3 ambient;
        vec3 diffuse;
        vec3 specular;
    };

    struct point_light_t
    {
        vec3 position;
        vec3 ambient;
        vec3 diffuse;
        vec3 specular;
        float constant;
        float linear;
        float quadratic;
    };

    struct spot_light_t
    {
        vec3 position;
        vec3 direction;
        float cutOff;
        float outerCutOff;
        vec3 ambient;
        vec3 diffuse;
        vec3 specular;
        float constant;
        float linear;
        float quadratic;
    };

    uniform vec4 fs_params[1];
    uniform vec4 fs_dir_light[4];
    uniform vec4 fs_point_lights[20];
    uniform vec4 fs_spot_light[7];
    uniform vec4 fs_material[1];
    layout(binding = 16) uniform sampler2D _diffuse_texture_diffuse_texture_smp;
    layout(binding = 17) uniform sampler2D _specular_texture_specular_texture_smp;

    layout(location = 1) in vec3 Normal;
    layout(location = 0) in vec3 FragPos;
    layout(location = 0) out vec4 FragColor;
    layout(location = 2) in vec2 TexCoords;

    dir_light_t get_dir_light()
    {
        return dir_light_t(fs_dir_light[0].xyz, fs_dir_light[1].xyz, fs_dir_light[2].xyz, fs_dir_light[3].xyz);
    }

    vec3 calcDirLight(dir_light_t light, vec3 normal, vec3 viewDir)
    {
        vec3 _214 = normalize(-light.direction);
        return fma(light.specular * pow(max(dot(viewDir, reflect(-_214, normal)), 0.0), fs_material[0].x), vec3(texture(_specular_texture_specular_texture_smp, TexCoords).xyz), fma(light.ambient, vec3(texture(_diffuse_texture_diffuse_texture_smp, TexCoords).xyz), (light.diffuse * max(dot(normal, _214), 0.0)) * vec3(texture(_diffuse_texture_diffuse_texture_smp, TexCoords).xyz)));
    }

    point_light_t get_point_light(int index)
    {
        return point_light_t(fs_point_lights[index * 1 + 0].xyz, fs_point_lights[index * 1 + 4].xyz, fs_point_lights[index * 1 + 8].xyz, fs_point_lights[index * 1 + 12].xyz, fs_point_lights[index * 1 + 16].x, fs_point_lights[index * 1 + 16].y, fs_point_lights[index * 1 + 16].z);
    }

    vec3 calcPointLight(point_light_t light, vec3 normal, vec3 fragPos, vec3 viewDir)
    {
        vec3 _305 = normalize(light.position - fragPos);
        float _329 = length(light.position - fragPos);
        float _345 = 1.0 / fma(light.quadratic, _329 * _329, fma(light.linear, _329, light.constant));
        return (((light.ambient * vec3(texture(_diffuse_texture_diffuse_texture_smp, TexCoords).xyz)) * _345) + (((light.diffuse * max(dot(normal, _305), 0.0)) * vec3(texture(_diffuse_texture_diffuse_texture_smp, TexCoords).xyz)) * _345)) + (((light.specular * pow(max(dot(viewDir, reflect(-_305, normal)), 0.0), fs_material[0].x)) * vec3(texture(_specular_texture_specular_texture_smp, TexCoords).xyz)) * _345);
    }

    spot_light_t get_spot_light()
    {
        return spot_light_t(fs_spot_light[0].xyz, fs_spot_light[1].xyz, fs_spot_light[1].w, fs_spot_light[2].x, fs_spot_light[3].xyz, fs_spot_light[4].xyz, fs_spot_light[5].xyz, fs_spot_light[5].w, fs_spot_light[6].x, fs_spot_light[6].y);
    }

    vec3 calcSpotLight(spot_light_t light, vec3 normal, vec3 fragPos, vec3 viewDir)
    {
        vec3 _410 = normalize(light.position - fragPos);
        float _479 = length(light.position - fragPos);
        float _498 = (1.0 / fma(light.quadratic, _479 * _479, fma(light.linear, _479, light.constant))) * clamp((dot(_410, normalize(-light.direction)) - light.outerCutOff) / (light.cutOff - light.outerCutOff), 0.0, 1.0);
        return (((light.diffuse * max(dot(normal, _410), 0.0)) * texture(_diffuse_texture_diffuse_texture_smp, TexCoords).xyz) * _498) + (((light.specular * pow(max(dot(viewDir, reflect(-_410, normal)), 0.0), fs_material[0].x)) * texture(_specular_texture_specular_texture_smp, TexCoords).xyz) * _498);
    }

    void main()
    {
        vec3 _51 = normalize(Normal);
        vec3 _63 = normalize(fs_params[0].xyz - FragPos);
        dir_light_t param = get_dir_light();
        vec3 param_1 = _51;
        vec3 param_2 = _63;
        vec3 result = calcDirLight(param, param_1, param_2);
        for (int i = 0; i < 4; i++)
        {
            int param_3 = i;
            point_light_t param_4 = get_point_light(param_3);
            vec3 param_5 = _51;
            vec3 param_6 = FragPos;
            vec3 param_7 = _63;
            result += calcPointLight(param_4, param_5, param_6, param_7);
        }
        spot_light_t param_8 = get_spot_light();
        vec3 param_9 = _51;
        vec3 param_10 = FragPos;
        vec3 param_11 = _63;
        vec3 _107 = result;
        vec3 _108 = _107 + calcSpotLight(param_8, param_9, param_10, param_11);
        result = _108;
        FragColor = vec4(_108, 1.0);
    }

*/
static const uint8_t fs_source_glsl430[4401] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x64,0x69,0x72,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x74,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x64,0x69,0x72,0x65,
    0x63,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,
    0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x33,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x33,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x3b,0x0a,0x7d,0x3b,
    0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x33,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,
    0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x6f,0x6e,
    0x73,0x74,0x61,0x6e,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x71,0x75,0x61,0x64,0x72,0x61,0x74,0x69,0x63,0x3b,0x0a,0x7d,0x3b,
    0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x73,0x70,0x6f,0x74,0x5f,0x6c,0x69,
    0x67,0x68,0x74,0x5f,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,
    0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x33,0x20,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x75,0x74,0x4f,0x66,0x66,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x6f,0x75,0x74,0x65,0x72,
    0x43,0x75,0x74,0x4f,0x66,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,
    0x20,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x33,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,
    0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x6c,0x69,0x6e,
    0x65,0x61,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x71,
    0x75,0x61,0x64,0x72,0x61,0x74,0x69,0x63,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x73,0x5f,0x64,0x69,0x72,0x5f,0x6c,0x69,0x67,
    0x68,0x74,0x5b,0x34,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,
    0x65,0x63,0x34,0x20,0x66,0x73,0x5f,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,
    0x68,0x74,0x73,0x5b,0x32,0x30,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x73,0x5f,0x73,0x70,0x6f,0x74,0x5f,0x6c,0x69,
    0x67,0x68,0x74,0x5b,0x37,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,
    0x76,0x65,0x63,0x34,0x20,0x66,0x73,0x5f,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,
    0x5b,0x31,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x62,0x69,0x6e,0x64,
    0x69,0x6e,0x67,0x20,0x3d,0x20,0x31,0x36,0x29,0x20,0x75,0x6e,0x69,0x66,0x6f,0x72,
    0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x5f,0x64,0x69,0x66,
    0x66,0x75,0x73,0x65,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x64,0x69,0x66,
    0x66,0x75,0x73,0x65,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,
    0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,
    0x20,0x3d,0x20,0x31,0x37,0x29,0x20,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,
    0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,
    0x61,0x72,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x70,0x65,0x63,0x75,
    0x6c,0x61,0x72,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,0x3b,
    0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x4e,
    0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,
    0x65,0x63,0x33,0x20,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,
    0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x46,0x72,0x61,0x67,0x43,
    0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,
    0x63,0x32,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x73,0x3b,0x0a,0x0a,0x64,
    0x69,0x72,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x74,0x20,0x67,0x65,0x74,0x5f,0x64,
    0x69,0x72,0x5f,0x6c,0x69,0x67,0x68,0x74,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x64,0x69,0x72,0x5f,0x6c,0x69,0x67,0x68,
    0x74,0x5f,0x74,0x28,0x66,0x73,0x5f,0x64,0x69,0x72,0x5f,0x6c,0x69,0x67,0x68,0x74,
    0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x66,0x73,0x5f,0x64,0x69,0x72,0x5f,
    0x6c,0x69,0x67,0x68,0x74,0x5b,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x66,0x73,
    0x5f,0x64,0x69,0x72,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5b,0x32,0x5d,0x2e,0x78,0x79,
    0x7a,0x2c,0x20,0x66,0x73,0x5f,0x64,0x69,0x72,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5b,
    0x33,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x63,0x33,
    0x20,0x63,0x61,0x6c,0x63,0x44,0x69,0x72,0x4c,0x69,0x67,0x68,0x74,0x28,0x64,0x69,
    0x72,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x74,0x20,0x6c,0x69,0x67,0x68,0x74,0x2c,
    0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x76,0x65,
    0x63,0x33,0x20,0x76,0x69,0x65,0x77,0x44,0x69,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x31,0x34,0x20,0x3d,0x20,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x2d,0x6c,0x69,0x67,0x68,0x74,0x2e,0x64,
    0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x6d,0x61,0x28,0x6c,0x69,0x67,0x68,0x74,0x2e,
    0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x20,0x2a,0x20,0x70,0x6f,0x77,0x28,0x6d,
    0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x76,0x69,0x65,0x77,0x44,0x69,0x72,0x2c,0x20,
    0x72,0x65,0x66,0x6c,0x65,0x63,0x74,0x28,0x2d,0x5f,0x32,0x31,0x34,0x2c,0x20,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x29,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x66,
    0x73,0x5f,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5b,0x30,0x5d,0x2e,0x78,0x29,
    0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x5f,
    0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x73,
    0x29,0x2e,0x78,0x79,0x7a,0x29,0x2c,0x20,0x66,0x6d,0x61,0x28,0x6c,0x69,0x67,0x68,
    0x74,0x2e,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,
    0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,
    0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,
    0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x54,0x65,
    0x78,0x43,0x6f,0x6f,0x72,0x64,0x73,0x29,0x2e,0x78,0x79,0x7a,0x29,0x2c,0x20,0x28,
    0x6c,0x69,0x67,0x68,0x74,0x2e,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x20,0x2a,0x20,
    0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,
    0x5f,0x32,0x31,0x34,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x20,0x2a,0x20,0x76,
    0x65,0x63,0x33,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x5f,0x64,0x69,0x66,
    0x66,0x75,0x73,0x65,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x64,0x69,0x66,
    0x66,0x75,0x73,0x65,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,
    0x2c,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x73,0x29,0x2e,0x78,0x79,0x7a,
    0x29,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,
    0x67,0x68,0x74,0x5f,0x74,0x20,0x67,0x65,0x74,0x5f,0x70,0x6f,0x69,0x6e,0x74,0x5f,
    0x6c,0x69,0x67,0x68,0x74,0x28,0x69,0x6e,0x74,0x20,0x69,0x6e,0x64,0x65,0x78,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x70,0x6f,
    0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x74,0x28,0x66,0x73,0x5f,0x70,
    0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x73,0x5b,0x69,0x6e,0x64,0x65,
    0x78,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,
    0x66,0x73,0x5f,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x73,0x5b,
    0x69,0x6e,0x64,0x65,0x78,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x34,0x5d,0x2e,0x78,
    0x79,0x7a,0x2c,0x20,0x66,0x73,0x5f,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,
    0x68,0x74,0x73,0x5b,0x69,0x6e,0x64,0x65,0x78,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,
    0x38,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x66,0x73,0x5f,0x70,0x6f,0x69,0x6e,0x74,
    0x5f,0x6c,0x69,0x67,0x68,0x74,0x73,0x5b,0x69,0x6e,0x64,0x65,0x78,0x20,0x2a,0x20,
    0x31,0x20,0x2b,0x20,0x31,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x66,0x73,0x5f,
    0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x73,0x5b,0x69,0x6e,0x64,
    0x65,0x78,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x31,0x36,0x5d,0x2e,0x78,0x2c,0x20,
    0x66,0x73,0x5f,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x73,0x5b,
    0x69,0x6e,0x64,0x65,0x78,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x31,0x36,0x5d,0x2e,
    0x79,0x2c,0x20,0x66,0x73,0x5f,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,
    0x74,0x73,0x5b,0x69,0x6e,0x64,0x65,0x78,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x31,
    0x36,0x5d,0x2e,0x7a,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x63,0x33,0x20,0x63,
    0x61,0x6c,0x63,0x50,0x6f,0x69,0x6e,0x74,0x4c,0x69,0x67,0x68,0x74,0x28,0x70,0x6f,
    0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x74,0x20,0x6c,0x69,0x67,0x68,
    0x74,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,
    0x76,0x65,0x63,0x33,0x20,0x66,0x72,0x61,0x67,0x50,0x6f,0x73,0x2c,0x20,0x76,0x65,
    0x63,0x33,0x20,0x76,0x69,0x65,0x77,0x44,0x69,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x30,0x35,0x20,0x3d,0x20,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x6c,0x69,0x67,0x68,0x74,0x2e,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x2d,0x20,0x66,0x72,0x61,0x67,0x50,0x6f,0x73,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x32,
    0x39,0x20,0x3d,0x20,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x6c,0x69,0x67,0x68,0x74,
    0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x2d,0x20,0x66,0x72,0x61,0x67,
    0x50,0x6f,0x73,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x33,0x34,0x35,0x20,0x3d,0x20,0x31,0x2e,0x30,0x20,0x2f,0x20,0x66,0x6d,0x61,
    0x28,0x6c,0x69,0x67,0x68,0x74,0x2e,0x71,0x75,0x61,0x64,0x72,0x61,0x74,0x69,0x63,
    0x2c,0x20,0x5f,0x33,0x32,0x39,0x20,0x2a,0x20,0x5f,0x33,0x32,0x39,0x2c,0x20,0x66,
    0x6d,0x61,0x28,0x6c,0x69,0x67,0x68,0x74,0x2e,0x6c,0x69,0x6e,0x65,0x61,0x72,0x2c,
    0x20,0x5f,0x33,0x32,0x39,0x2c,0x20,0x6c,0x69,0x67,0x68,0x74,0x2e,0x63,0x6f,0x6e,
    0x73,0x74,0x61,0x6e,0x74,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x28,0x28,0x28,0x6c,0x69,0x67,0x68,0x74,0x2e,0x61,0x6d,0x62,
    0x69,0x65,0x6e,0x74,0x20,0x2a,0x20,0x76,0x65,0x63,0x33,0x28,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x28,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x5f,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x5f,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,
    0x72,0x64,0x73,0x29,0x2e,0x78,0x79,0x7a,0x29,0x29,0x20,0x2a,0x20,0x5f,0x33,0x34,
    0x35,0x29,0x20,0x2b,0x20,0x28,0x28,0x28,0x6c,0x69,0x67,0x68,0x74,0x2e,0x64,0x69,
    0x66,0x66,0x75,0x73,0x65,0x20,0x2a,0x20,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x5f,0x33,0x30,0x35,0x29,0x2c,0x20,0x30,
    0x2e,0x30,0x29,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x33,0x28,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x28,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x5f,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x5f,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,
    0x72,0x64,0x73,0x29,0x2e,0x78,0x79,0x7a,0x29,0x29,0x20,0x2a,0x20,0x5f,0x33,0x34,
    0x35,0x29,0x29,0x20,0x2b,0x20,0x28,0x28,0x28,0x6c,0x69,0x67,0x68,0x74,0x2e,0x73,
    0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x20,0x2a,0x20,0x70,0x6f,0x77,0x28,0x6d,0x61,
    0x78,0x28,0x64,0x6f,0x74,0x28,0x76,0x69,0x65,0x77,0x44,0x69,0x72,0x2c,0x20,0x72,
    0x65,0x66,0x6c,0x65,0x63,0x74,0x28,0x2d,0x5f,0x33,0x30,0x35,0x2c,0x20,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x29,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x66,0x73,
    0x5f,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5b,0x30,0x5d,0x2e,0x78,0x29,0x29,
    0x20,0x2a,0x20,0x76,0x65,0x63,0x33,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,
    0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x5f,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,
    0x73,0x29,0x2e,0x78,0x79,0x7a,0x29,0x29,0x20,0x2a,0x20,0x5f,0x33,0x34,0x35,0x29,
    0x3b,0x0a,0x7d,0x0a,0x0a,0x73,0x70,0x6f,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,
    0x74,0x20,0x67,0x65,0x74,0x5f,0x73,0x70,0x6f,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,
    0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x73,0x70,0x6f,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x74,0x28,0x66,0x73,0x5f,
    0x73,0x70,0x6f,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5b,0x30,0x5d,0x2e,0x78,0x79,
    0x7a,0x2c,0x20,0x66,0x73,0x5f,0x73,0x70,0x6f,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,
    0x5b,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x66,0x73,0x5f,0x73,0x70,0x6f,0x74,
    0x5f,0x6c,0x69,0x67,0x68,0x74,0x5b,0x31,0x5d,0x2e,0x77,0x2c,0x20,0x66,0x73,0x5f,
    0x73,0x70,0x6f,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5b,0x32,0x5d,0x2e,0x78,0x2c,
    0x20,0x66,0x73,0x5f,0x73,0x70,0x6f,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5b,0x33,
    0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x66,0x73,0x5f,0x73,0x70,0x6f,0x74,0x5f,0x6c,
    0x69,0x67,0x68,0x74,0x5b,0x34,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x66,0x73,0x5f,
    0x73,0x70,0x6f,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5b,0x35,0x5d,0x2e,0x78,0x79,
    0x7a,0x2c,0x20,0x66,0x73,0x5f,0x73,0x70,0x6f,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,
    0x5b,0x35,0x5d,0x2e,0x77,0x2c,0x20,0x66,0x73,0x5f,0x73,0x70,0x6f,0x74,0x5f,0x6c,
    0x69,0x67,0x68,0x74,0x5b,0x36,0x5d,0x2e,0x78,0x2c,0x20,0x66,0x73,0x5f,0x73,0x70,
    0x6f,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5b,0x36,0x5d,0x2e,0x79,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x76,0x65,0x63,0x33,0x20,0x63,0x61,0x6c,0x63,0x53,0x70,0x6f,0x74,
    0x4c,0x69,0x67,0x68,0x74,0x28,0x73,0x70,0x6f,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,
    0x5f,0x74,0x20,0x6c,0x69,0x67,0x68,0x74,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x66,0x72,0x61,0x67,
    0x50,0x6f,0x73,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x69,0x65,0x77,0x44,0x69,
    0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x34,
    0x31,0x30,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x6c,
    0x69,0x67,0x68,0x74,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x2d,0x20,
    0x66,0x72,0x61,0x67,0x50,0x6f,0x73,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x34,0x37,0x39,0x20,0x3d,0x20,0x6c,0x65,0x6e,0x67,0x74,
    0x68,0x28,0x6c,0x69,0x67,0x68,0x74,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x20,0x2d,0x20,0x66,0x72,0x61,0x67,0x50,0x6f,0x73,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x39,0x38,0x20,0x3d,0x20,0x28,0x31,
    0x2e,0x30,0x20,0x2f,0x20,0x66,0x6d,0x61,0x28,0x6c,0x69,0x67,0x68,0x74,0x2e,0x71,
    0x75,0x61,0x64,0x72,0x61,0x74,0x69,0x63,0x2c,0x20,0x5f,0x34,0x37,0x39,0x20,0x2a,
    0x20,0x5f,0x34,0x37,0x39,0x2c,0x20,0x66,0x6d,0x61,0x28,0x6c,0x69,0x67,0x68,0x74,
    0x2e,0x6c,0x69,0x6e,0x65,0x61,0x72,0x2c,0x20,0x5f,0x34,0x37,0x39,0x2c,0x20,0x6c,
    0x69,0x67,0x68,0x74,0x2e,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x29,0x29,0x29,
    0x20,0x2a,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x28,0x64,0x6f,0x74,0x28,0x5f,0x34,
    0x31,0x30,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x2d,0x6c,
    0x69,0x67,0x68,0x74,0x2e,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x29,0x29,
    0x20,0x2d,0x20,0x6c,0x69,0x67,0x68,0x74,0x2e,0x6f,0x75,0x74,0x65,0x72,0x43,0x75,
    0x74,0x4f,0x66,0x66,0x29,0x20,0x2f,0x20,0x28,0x6c,0x69,0x67,0x68,0x74,0x2e,0x63,
    0x75,0x74,0x4f,0x66,0x66,0x20,0x2d,0x20,0x6c,0x69,0x67,0x68,0x74,0x2e,0x6f,0x75,
    0x74,0x65,0x72,0x43,0x75,0x74,0x4f,0x66,0x66,0x29,0x2c,0x20,0x30,0x2e,0x30,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x28,0x28,0x28,0x6c,0x69,0x67,0x68,0x74,0x2e,0x64,0x69,0x66,0x66,0x75,
    0x73,0x65,0x20,0x2a,0x20,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x2c,0x20,0x5f,0x34,0x31,0x30,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,
    0x29,0x20,0x2a,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x5f,0x64,0x69,0x66,
    0x66,0x75,0x73,0x65,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x64,0x69,0x66,
    0x66,0x75,0x73,0x65,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,
    0x2c,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x73,0x29,0x2e,0x78,0x79,0x7a,
    0x29,0x20,0x2a,0x20,0x5f,0x34,0x39,0x38,0x29,0x20,0x2b,0x20,0x28,0x28,0x28,0x6c,
    0x69,0x67,0x68,0x74,0x2e,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x20,0x2a,0x20,
    0x70,0x6f,0x77,0x28,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x76,0x69,0x65,0x77,
    0x44,0x69,0x72,0x2c,0x20,0x72,0x65,0x66,0x6c,0x65,0x63,0x74,0x28,0x2d,0x5f,0x34,
    0x31,0x30,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x29,0x2c,0x20,0x30,0x2e,
    0x30,0x29,0x2c,0x20,0x66,0x73,0x5f,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5b,
    0x30,0x5d,0x2e,0x78,0x29,0x29,0x20,0x2a,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x28,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x5f,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x5f,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,
    0x64,0x73,0x29,0x2e,0x78,0x79,0x7a,0x29,0x20,0x2a,0x20,0x5f,0x34,0x39,0x38,0x29,
    0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x35,0x31,0x20,
    0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x4e,0x6f,0x72,0x6d,
    0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x36,
    0x33,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x66,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2d,
    0x20,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x64,
    0x69,0x72,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x20,0x3d,0x20,0x67,0x65,0x74,0x5f,0x64,0x69,0x72,0x5f,0x6c,0x69,0x67,0x68,0x74,
    0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x5f,0x35,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x5f,
    0x36,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x72,0x65,0x73,
    0x75,0x6c,0x74,0x20,0x3d,0x20,0x63,0x61,0x6c,0x63,0x44,0x69,0x72,0x4c,0x69,0x67,
    0x68,0x74,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,0x69,0x20,0x3d,0x20,0x30,0x3b,
    0x20,0x69,0x20,0x3c,0x20,0x34,0x3b,0x20,0x69,0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x69,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,
    0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,0x67,0x65,0x74,0x5f,
    0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x28,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x5f,0x35,0x31,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x36,0x20,0x3d,0x20,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x37,0x20,0x3d,0x20,0x5f,0x36,0x33,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,0x2b,0x3d,0x20,
    0x63,0x61,0x6c,0x63,0x50,0x6f,0x69,0x6e,0x74,0x4c,0x69,0x67,0x68,0x74,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x34,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x37,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x73,0x70,
    0x6f,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x38,0x20,0x3d,0x20,0x67,0x65,0x74,0x5f,0x73,0x70,0x6f,0x74,0x5f,0x6c,0x69,
    0x67,0x68,0x74,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x20,0x3d,0x20,0x5f,0x35,0x31,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,
    0x20,0x3d,0x20,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,0x20,0x3d,0x20,
    0x5f,0x36,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,
    0x30,0x37,0x20,0x3d,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x30,0x38,0x20,0x3d,0x20,0x5f,0x31,0x30,
    0x37,0x20,0x2b,0x20,0x63,0x61,0x6c,0x63,0x53,0x70,0x6f,0x74,0x4c,0x69,0x67,0x68,
    0x74,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x39,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x2c,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x31,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x73,
    0x75,0x6c,0x74,0x20,0x3d,0x20,0x5f,0x31,0x30,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,
    0x28,0x5f,0x31,0x30,0x38,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x00,
};
/*
    #version 430

    uniform vec4 vs_params[12];
    layout(location = 0) in vec3 aPos;

    void main()
    {
        gl_Position = ((mat4(vs_params[8], vs_params[9], vs_params[10], vs_params[11]) * mat4(vs_params[4], vs_params[5], vs_params[6], vs_params[7])) * mat4(vs_params[0], vs_params[1], vs_params[2], vs_params[3])) * vec4(aPos, 1.0);
    }

*/
static const uint8_t light_cube_vs_source_glsl430[326] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x31,0x32,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,
    0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x50,0x6f,0x73,0x3b,0x0a,0x0a,0x76,0x6f,
    0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,0x28,
    0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x38,
    0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x39,0x5d,0x2c,
    0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x30,0x5d,0x2c,0x20,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x31,0x5d,0x29,0x20,0x2a,
    0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x34,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,
    0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x36,0x5d,0x2c,0x20,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x37,0x5d,0x29,0x29,0x20,0x2a,
    0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,
    0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,0x20,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,0x29,0x20,0x2a,
    0x20,0x76,0x65,0x63,0x34,0x28,0x61,0x50,0x6f,0x73,0x2c,0x20,0x31,0x2e,0x30,0x29,
    0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 430

    uniform vec4 light_cube_fs_params[1];
    layout(location = 0) out vec4 FragColor;

    void main()
    {
        FragColor = vec4(light_cube_fs_params[0].xyz, 1.0);
    }

*/
static const uint8_t light_cube_fs_source_glsl430[168] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x6c,0x69,0x67,0x68,0x74,
    0x5f,0x63,0x75,0x62,0x65,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x31,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,
    0x34,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x6f,
    0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,
    0x28,0x6c,0x69,0x67,0x68,0x74,0x5f,0x63,0x75,0x62,0x65,0x5f,0x66,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x31,0x2e,
    0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es

    uniform vec4 vs_params[12];
    layout(location = 0) in vec3 aPos;
    out vec3 FragPos;
    out vec3 Normal;
    layout(location = 1) in vec3 aNormal;
    out vec2 TexCoords;
    layout(location = 2) in vec2 aTexCoords;

    void main()
    {
        mat4 _29 = mat4(vs_params[0], vs_params[1], vs_params[2], vs_params[3]);
        vec4 _39 = vec4(aPos, 1.0);
        gl_Position = ((mat4(vs_params[8], vs_params[9], vs_params[10], vs_params[11]) * mat4(vs_params[4], vs_params[5], vs_params[6], vs_params[7])) * _29) * _39;
        FragPos = vec3((_29 * _39).xyz);
        mat4 _61 = transpose(inverse(_29));
        Normal = mat3(_61[0].xyz, _61[1].xyz, _61[2].xyz) * aNormal;
        TexCoords = aTexCoords;
    }

*/
static const uint8_t vs_source_glsl300es[673] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x32,0x5d,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,
    0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x50,0x6f,0x73,0x3b,0x0a,
    0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,
    0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x4e,0x6f,0x72,0x6d,0x61,
    0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,
    0x61,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,
    0x32,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x73,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,
    0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x61,0x54,0x65,0x78,0x43,0x6f,
    0x6f,0x72,0x64,0x73,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,
    0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x5f,0x32,
    0x39,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x31,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,
    0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x33,0x39,0x20,0x3d,
    0x20,0x76,0x65,0x63,0x34,0x28,0x61,0x50,0x6f,0x73,0x2c,0x20,0x31,0x2e,0x30,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x28,0x28,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x38,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x39,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x31,0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x31,0x31,0x5d,0x29,0x20,0x2a,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x35,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x36,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x37,0x5d,0x29,0x29,0x20,0x2a,0x20,0x5f,0x32,0x39,0x29,0x20,0x2a,0x20,0x5f,0x33,
    0x39,0x3b,0x0a,0x20,0x20,0x20,0x20,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x20,0x3d,
    0x20,0x76,0x65,0x63,0x33,0x28,0x28,0x5f,0x32,0x39,0x20,0x2a,0x20,0x5f,0x33,0x39,
    0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,
    0x20,0x5f,0x36,0x31,0x20,0x3d,0x20,0x74,0x72,0x61,0x6e,0x73,0x70,0x6f,0x73,0x65,
    0x28,0x69,0x6e,0x76,0x65,0x72,0x73,0x65,0x28,0x5f,0x32,0x39,0x29,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6d,0x61,0x74,
    0x33,0x28,0x5f,0x36,0x31,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x5f,0x36,
    0x31,0x5b,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x5f,0x36,0x31,0x5b,0x32,0x5d,
    0x2e,0x78,0x79,0x7a,0x29,0x20,0x2a,0x20,0x61,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x73,0x20,0x3d,
    0x20,0x61,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x73,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;

    struct dir_light_t
    {
        highp vec3 direction;
        highp vec3 ambient;
        highp vec3 diffuse;
        highp vec3 specular;
    };

    struct point_light_t
    {
        highp vec3 position;
        highp vec3 ambient;
        highp vec3 diffuse;
        highp vec3 specular;
        highp float constant;
        highp float linear;
        highp float quadratic;
    };

    struct spot_light_t
    {
        highp vec3 position;
        highp vec3 direction;
        highp float cutOff;
        highp float outerCutOff;
        highp vec3 ambient;
        highp vec3 diffuse;
        highp vec3 specular;
        highp float constant;
        highp float linear;
        highp float quadratic;
    };

    uniform highp vec4 fs_params[1];
    uniform highp vec4 fs_dir_light[4];
    uniform highp vec4 fs_point_lights[20];
    uniform highp vec4 fs_spot_light[7];
    uniform highp vec4 fs_material[1];
    uniform highp sampler2D _diffuse_texture_diffuse_texture_smp;
    uniform highp sampler2D _specular_texture_specular_texture_smp;

    in highp vec3 Normal;
    in highp vec3 FragPos;
    layout(location = 0) out highp vec4 FragColor;
    in highp vec2 TexCoords;

    dir_light_t get_dir_light()
    {
        return dir_light_t(fs_dir_light[0].xyz, fs_dir_light[1].xyz, fs_dir_light[2].xyz, fs_dir_light[3].xyz);
    }

    highp vec3 calcDirLight(dir_light_t light, highp vec3 normal, highp vec3 viewDir)
    {
        highp vec3 _214 = normalize(-light.direction);
        return (light.specular * pow(max(dot(viewDir, reflect(-_214, normal)), 0.0), fs_material[0].x)) * vec3(texture(_specular_texture_specular_texture_smp, TexCoords).xyz) + (light.ambient * vec3(texture(_diffuse_texture_diffuse_texture_smp, TexCoords).xyz) + ((light.diffuse * max(dot(normal, _214), 0.0)) * vec3(texture(_diffuse_texture_diffuse_texture_smp, TexCoords).xyz)));
    }

    point_light_t get_point_light(int index)
    {
        return point_light_t(fs_point_lights[index * 1 + 0].xyz, fs_point_lights[index * 1 + 4].xyz, fs_point_lights[index * 1 + 8].xyz, fs_point_lights[index * 1 + 12].xyz, fs_point_lights[index * 1 + 16].x, fs_point_lights[index * 1 + 16].y, fs_point_lights[index * 1 + 16].z);
    }

    highp vec3 calcPointLight(point_light_t light, highp vec3 normal, highp vec3 fragPos, highp vec3 viewDir)
    {
        highp vec3 _305 = normalize(light.position - fragPos);
        highp float _329 = length(light.position - fragPos);
        highp float _345 = 1.0 / (light.quadratic * (_329 * _329) + (light.linear * _329 + light.constant));
        return (((light.ambient * vec3(texture(_diffuse_texture_diffuse_texture_smp, TexCoords).xyz)) * _345) + (((light.diffuse * max(dot(normal, _305), 0.0)) * vec3(texture(_diffuse_texture_diffuse_texture_smp, TexCoords).xyz)) * _345)) + (((light.specular * pow(max(dot(viewDir, reflect(-_305, normal)), 0.0), fs_material[0].x)) * vec3(texture(_specular_texture_specular_texture_smp, TexCoords).xyz)) * _345);
    }

    spot_light_t get_spot_light()
    {
        return spot_light_t(fs_spot_light[0].xyz, fs_spot_light[1].xyz, fs_spot_light[1].w, fs_spot_light[2].x, fs_spot_light[3].xyz, fs_spot_light[4].xyz, fs_spot_light[5].xyz, fs_spot_light[5].w, fs_spot_light[6].x, fs_spot_light[6].y);
    }

    highp vec3 calcSpotLight(spot_light_t light, highp vec3 normal, highp vec3 fragPos, highp vec3 viewDir)
    {
        highp vec3 _410 = normalize(light.position - fragPos);
        highp float _479 = length(light.position - fragPos);
        highp float _498 = (1.0 / (light.quadratic * (_479 * _479) + (light.linear * _479 + light.constant))) * clamp((dot(_410, normalize(-light.direction)) - light.outerCutOff) / (light.cutOff - light.outerCutOff), 0.0, 1.0);
        return (((light.diffuse * max(dot(normal, _410), 0.0)) * texture(_diffuse_texture_diffuse_texture_smp, TexCoords).xyz) * _498) + (((light.specular * pow(max(dot(viewDir, reflect(-_410, normal)), 0.0), fs_material[0].x)) * texture(_specular_texture_specular_texture_smp, TexCoords).xyz) * _498);
    }

    void main()
    {
        highp vec3 _51 = normalize(Normal);
        highp vec3 _63 = normalize(fs_params[0].xyz - FragPos);
        dir_light_t param = get_dir_light();
        highp vec3 param_1 = _51;
        highp vec3 param_2 = _63;
        highp vec3 result = calcDirLight(param, param_1, param_2);
        for (int i = 0; i < 4; i++)
        {
            int param_3 = i;
            point_light_t param_4 = get_point_light(param_3);
            highp vec3 param_5 = _51;
            highp vec3 param_6 = FragPos;
            highp vec3 param_7 = _63;
            result += calcPointLight(param_4, param_5, param_6, param_7);
        }
        spot_light_t param_8 = get_spot_light();
        highp vec3 param_9 = _51;
        highp vec3 param_10 = FragPos;
        highp vec3 param_11 = _63;
        highp vec3 _107 = result;
        highp vec3 _108 = _107 + calcSpotLight(param_8, param_9, param_10, param_11);
        result = _108;
        FragColor = vec4(_108, 1.0);
    }

*/
static const uint8_t fs_source_glsl300es[4723] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x73,
    0x74,0x72,0x75,0x63,0x74,0x20,0x64,0x69,0x72,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,
    0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x33,0x20,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x6d,0x62,
    0x69,0x65,0x6e,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x73,0x70,0x65,
    0x63,0x75,0x6c,0x61,0x72,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,
    0x74,0x20,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x74,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,
    0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x6d,0x62,0x69,0x65,0x6e,
    0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x33,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,
    0x61,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x6c,0x69,
    0x6e,0x65,0x61,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x71,0x75,0x61,0x64,0x72,0x61,0x74,0x69,0x63,0x3b,
    0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x73,0x70,0x6f,0x74,
    0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x33,0x20,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x75,
    0x74,0x4f,0x66,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x6f,0x75,0x74,0x65,0x72,0x43,0x75,0x74,0x4f,0x66,
    0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x33,0x20,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x64,0x69,0x66,0x66,0x75,0x73,
    0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x33,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x6f,0x6e,0x73,
    0x74,0x61,0x6e,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x6c,0x69,0x6e,0x65,0x61,0x72,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x71,0x75,
    0x61,0x64,0x72,0x61,0x74,0x69,0x63,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x75,0x6e,0x69,
    0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,
    0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x3b,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,
    0x20,0x66,0x73,0x5f,0x64,0x69,0x72,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5b,0x34,0x5d,
    0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x34,0x20,0x66,0x73,0x5f,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,
    0x67,0x68,0x74,0x73,0x5b,0x32,0x30,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,
    0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x73,0x5f,
    0x73,0x70,0x6f,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5b,0x37,0x5d,0x3b,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x66,0x73,0x5f,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5b,0x31,0x5d,
    0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x5f,0x64,0x69,0x66,0x66,0x75,
    0x73,0x65,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x64,0x69,0x66,0x66,0x75,
    0x73,0x65,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,0x3b,0x0a,
    0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,
    0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,
    0x72,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,
    0x61,0x72,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,0x3b,0x0a,
    0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x4e,
    0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x69,0x6e,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x54,0x65,0x78,0x43,0x6f,
    0x6f,0x72,0x64,0x73,0x3b,0x0a,0x0a,0x64,0x69,0x72,0x5f,0x6c,0x69,0x67,0x68,0x74,
    0x5f,0x74,0x20,0x67,0x65,0x74,0x5f,0x64,0x69,0x72,0x5f,0x6c,0x69,0x67,0x68,0x74,
    0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x64,0x69,0x72,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x74,0x28,0x66,0x73,0x5f,0x64,
    0x69,0x72,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x2c,
    0x20,0x66,0x73,0x5f,0x64,0x69,0x72,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5b,0x31,0x5d,
    0x2e,0x78,0x79,0x7a,0x2c,0x20,0x66,0x73,0x5f,0x64,0x69,0x72,0x5f,0x6c,0x69,0x67,
    0x68,0x74,0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x66,0x73,0x5f,0x64,0x69,
    0x72,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5b,0x33,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x63,
    0x61,0x6c,0x63,0x44,0x69,0x72,0x4c,0x69,0x67,0x68,0x74,0x28,0x64,0x69,0x72,0x5f,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x74,0x20,0x6c,0x69,0x67,0x68,0x74,0x2c,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x69,0x65,
    0x77,0x44,0x69,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x31,0x34,0x20,0x3d,0x20,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x2d,0x6c,0x69,0x67,0x68,0x74,0x2e,0x64,
    0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x28,0x6c,0x69,0x67,0x68,0x74,0x2e,0x73,0x70,0x65,
    0x63,0x75,0x6c,0x61,0x72,0x20,0x2a,0x20,0x70,0x6f,0x77,0x28,0x6d,0x61,0x78,0x28,
    0x64,0x6f,0x74,0x28,0x76,0x69,0x65,0x77,0x44,0x69,0x72,0x2c,0x20,0x72,0x65,0x66,
    0x6c,0x65,0x63,0x74,0x28,0x2d,0x5f,0x32,0x31,0x34,0x2c,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x29,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x66,0x73,0x5f,0x6d,
    0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5b,0x30,0x5d,0x2e,0x78,0x29,0x29,0x20,0x2a,
    0x20,0x76,0x65,0x63,0x33,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x5f,0x73,
    0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,
    0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x5f,0x73,0x6d,0x70,0x2c,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x73,0x29,
    0x2e,0x78,0x79,0x7a,0x29,0x20,0x2b,0x20,0x28,0x6c,0x69,0x67,0x68,0x74,0x2e,0x61,
    0x6d,0x62,0x69,0x65,0x6e,0x74,0x20,0x2a,0x20,0x76,0x65,0x63,0x33,0x28,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x28,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x5f,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x5f,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x54,0x65,0x78,0x43,
    0x6f,0x6f,0x72,0x64,0x73,0x29,0x2e,0x78,0x79,0x7a,0x29,0x20,0x2b,0x20,0x28,0x28,
    0x6c,0x69,0x67,0x68,0x74,0x2e,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x20,0x2a,0x20,
    0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,
    0x5f,0x32,0x31,0x34,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x20,0x2a,0x20,0x76,
    0x65,0x63,0x33,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x5f,0x64,0x69,0x66,
    0x66,0x75,0x73,0x65,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x64,0x69,0x66,
    0x66,0x75,0x73,0x65,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,
    0x2c,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x73,0x29,0x2e,0x78,0x79,0x7a,
    0x29,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,
    0x67,0x68,0x74,0x5f,0x74,0x20,0x67,0x65,0x74,0x5f,0x70,0x6f,0x69,0x6e,0x74,0x5f,
    0x6c,0x69,0x67,0x68,0x74,0x28,0x69,0x6e,0x74,0x20,0x69,0x6e,0x64,0x65,0x78,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x70,0x6f,
    0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x74,0x28,0x66,0x73,0x5f,0x70,
    0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x73,0x5b,0x69,0x6e,0x64,0x65,
    0x78,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,
    0x66,0x73,0x5f,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x73,0x5b,
    0x69,0x6e,0x64,0x65,0x78,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x34,0x5d,0x2e,0x78,
    0x79,0x7a,0x2c,0x20,0x66,0x73,0x5f,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,
    0x68,0x74,0x73,0x5b,0x69,0x6e,0x64,0x65,0x78,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,
    0x38,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x66,0x73,0x5f,0x70,0x6f,0x69,0x6e,0x74,
    0x5f,0x6c,0x69,0x67,0x68,0x74,0x73,0x5b,0x69,0x6e,0x64,0x65,0x78,0x20,0x2a,0x20,
    0x31,0x20,0x2b,0x20,0x31,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x66,0x73,0x5f,
    0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x73,0x5b,0x69,0x6e,0x64,
    0x65,0x78,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x31,0x36,0x5d,0x2e,0x78,0x2c,0x20,
    0x66,0x73,0x5f,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x73,0x5b,
    0x69,0x6e,0x64,0x65,0x78,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x31,0x36,0x5d,0x2e,
    0x79,0x2c,0x20,0x66,0x73,0x5f,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,
    0x74,0x73,0x5b,0x69,0x6e,0x64,0x65,0x78,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x31,
    0x36,0x5d,0x2e,0x7a,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x63,0x61,0x6c,0x63,0x50,0x6f,0x69,0x6e,0x74,0x4c,0x69,
    0x67,0x68,0x74,0x28,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,
    0x74,0x20,0x6c,0x69,0x67,0x68,0x74,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x66,0x72,0x61,0x67,0x50,0x6f,0x73,0x2c,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x69,0x65,0x77,0x44,
    0x69,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x30,0x35,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x69,0x7a,0x65,0x28,0x6c,0x69,0x67,0x68,0x74,0x2e,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x2d,0x20,0x66,0x72,0x61,0x67,0x50,0x6f,0x73,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x33,0x32,0x39,0x20,0x3d,0x20,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x6c,
    0x69,0x67,0x68,0x74,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x2d,0x20,
    0x66,0x72,0x61,0x67,0x50,0x6f,0x73,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x34,0x35,0x20,0x3d,
    0x20,0x31,0x2e,0x30,0x20,0x2f,0x20,0x28,0x6c,0x69,0x67,0x68,0x74,0x2e,0x71,0x75,
    0x61,0x64,0x72,0x61,0x74,0x69,0x63,0x20,0x2a,0x20,0x28,0x5f,0x33,0x32,0x39,0x20,
    0x2a,0x20,0x5f,0x33,0x32,0x39,0x29,0x20,0x2b,0x20,0x28,0x6c,0x69,0x67,0x68,0x74,
    0x2e,0x6c,0x69,0x6e,0x65,0x61,0x72,0x20,0x2a,0x20,0x5f,0x33,0x32,0x39,0x20,0x2b,
    0x20,0x6c,0x69,0x67,0x68,0x74,0x2e,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x29,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x28,0x28,
    0x28,0x6c,0x69,0x67,0x68,0x74,0x2e,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x20,0x2a,
    0x20,0x76,0x65,0x63,0x33,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x5f,0x64,
    0x69,0x66,0x66,0x75,0x73,0x65,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x64,
    0x69,0x66,0x66,0x75,0x73,0x65,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,
    0x6d,0x70,0x2c,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x73,0x29,0x2e,0x78,
    0x79,0x7a,0x29,0x29,0x20,0x2a,0x20,0x5f,0x33,0x34,0x35,0x29,0x20,0x2b,0x20,0x28,
    0x28,0x28,0x6c,0x69,0x67,0x68,0x74,0x2e,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x20,
    0x2a,0x20,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x2c,0x20,0x5f,0x33,0x30,0x35,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x20,0x2a,
    0x20,0x76,0x65,0x63,0x33,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x5f,0x64,
    0x69,0x66,0x66,0x75,0x73,0x65,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x64,
    0x69,0x66,0x66,0x75,0x73,0x65,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,
    0x6d,0x70,0x2c,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x73,0x29,0x2e,0x78,
    0x79,0x7a,0x29,0x29,0x20,0x2a,0x20,0x5f,0x33,0x34,0x35,0x29,0x29,0x20,0x2b,0x20,
    0x28,0x28,0x28,0x6c,0x69,0x67,0x68,0x74,0x2e,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,
    0x72,0x20,0x2a,0x20,0x70,0x6f,0x77,0x28,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,
    0x76,0x69,0x65,0x77,0x44,0x69,0x72,0x2c,0x20,0x72,0x65,0x66,0x6c,0x65,0x63,0x74,
    0x28,0x2d,0x5f,0x33,0x30,0x35,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x29,
    0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x66,0x73,0x5f,0x6d,0x61,0x74,0x65,0x72,
    0x69,0x61,0x6c,0x5b,0x30,0x5d,0x2e,0x78,0x29,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,
    0x33,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x5f,0x73,0x70,0x65,0x63,0x75,
    0x6c,0x61,0x72,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x70,0x65,0x63,
    0x75,0x6c,0x61,0x72,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,
    0x2c,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x73,0x29,0x2e,0x78,0x79,0x7a,
    0x29,0x29,0x20,0x2a,0x20,0x5f,0x33,0x34,0x35,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x73,
    0x70,0x6f,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x74,0x20,0x67,0x65,0x74,0x5f,
    0x73,0x70,0x6f,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x28,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x73,0x70,0x6f,0x74,0x5f,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x74,0x28,0x66,0x73,0x5f,0x73,0x70,0x6f,0x74,0x5f,0x6c,
    0x69,0x67,0x68,0x74,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x66,0x73,0x5f,
    0x73,0x70,0x6f,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5b,0x31,0x5d,0x2e,0x78,0x79,
    0x7a,0x2c,0x20,0x66,0x73,0x5f,0x73,0x70,0x6f,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,
    0x5b,0x31,0x5d,0x2e,0x77,0x2c,0x20,0x66,0x73,0x5f,0x73,0x70,0x6f,0x74,0x5f,0x6c,
    0x69,0x67,0x68,0x74,0x5b,0x32,0x5d,0x2e,0x78,0x2c,0x20,0x66,0x73,0x5f,0x73,0x70,
    0x6f,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5b,0x33,0x5d,0x2e,0x78,0x79,0x7a,0x2c,
    0x20,0x66,0x73,0x5f,0x73,0x70,0x6f,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5b,0x34,
    0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x66,0x73,0x5f,0x73,0x70,0x6f,0x74,0x5f,0x6c,
    0x69,0x67,0x68,0x74,0x5b,0x35,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x66,0x73,0x5f,
    0x73,0x70,0x6f,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5b,0x35,0x5d,0x2e,0x77,0x2c,
    0x20,0x66,0x73,0x5f,0x73,0x70,0x6f,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5b,0x36,
    0x5d,0x2e,0x78,0x2c,0x20,0x66,0x73,0x5f,0x73,0x70,0x6f,0x74,0x5f,0x6c,0x69,0x67,
    0x68,0x74,0x5b,0x36,0x5d,0x2e,0x79,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x63,0x61,0x6c,0x63,0x53,0x70,0x6f,0x74,
    0x4c,0x69,0x67,0x68,0x74,0x28,0x73,0x70,0x6f,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,
    0x5f,0x74,0x20,0x6c,0x69,0x67,0x68,0x74,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x66,0x72,0x61,0x67,0x50,0x6f,0x73,0x2c,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x69,0x65,0x77,
    0x44,0x69,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x34,0x31,0x30,0x20,0x3d,0x20,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x6c,0x69,0x67,0x68,0x74,0x2e,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x20,0x2d,0x20,0x66,0x72,0x61,0x67,0x50,0x6f,0x73,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x34,0x37,0x39,0x20,0x3d,0x20,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,
    0x6c,0x69,0x67,0x68,0x74,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x2d,
    0x20,0x66,0x72,0x61,0x67,0x50,0x6f,0x73,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x39,0x38,0x20,
    0x3d,0x20,0x28,0x31,0x2e,0x30,0x20,0x2f,0x20,0x28,0x6c,0x69,0x67,0x68,0x74,0x2e,
    0x71,0x75,0x61,0x64,0x72,0x61,0x74,0x69,0x63,0x20,0x2a,0x20,0x28,0x5f,0x34,0x37,
    0x39,0x20,0x2a,0x20,0x5f,0x34,0x37,0x39,0x29,0x20,0x2b,0x20,0x28,0x6c,0x69,0x67,
    0x68,0x74,0x2e,0x6c,0x69,0x6e,0x65,0x61,0x72,0x20,0x2a,0x20,0x5f,0x34,0x37,0x39,
    0x20,0x2b,0x20,0x6c,0x69,0x67,0x68,0x74,0x2e,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,
    0x74,0x29,0x29,0x29,0x20,0x2a,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x28,0x64,0x6f,
    0x74,0x28,0x5f,0x34,0x31,0x30,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,
    0x65,0x28,0x2d,0x6c,0x69,0x67,0x68,0x74,0x2e,0x64,0x69,0x72,0x65,0x63,0x74,0x69,
    0x6f,0x6e,0x29,0x29,0x20,0x2d,0x20,0x6c,0x69,0x67,0x68,0x74,0x2e,0x6f,0x75,0x74,
    0x65,0x72,0x43,0x75,0x74,0x4f,0x66,0x66,0x29,0x20,0x2f,0x20,0x28,0x6c,0x69,0x67,
    0x68,0x74,0x2e,0x63,0x75,0x74,0x4f,0x66,0x66,0x20,0x2d,0x20,0x6c,0x69,0x67,0x68,
    0x74,0x2e,0x6f,0x75,0x74,0x65,0x72,0x43,0x75,0x74,0x4f,0x66,0x66,0x29,0x2c,0x20,
    0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x28,0x28,0x28,0x6c,0x69,0x67,0x68,0x74,0x2e,0x64,
    0x69,0x66,0x66,0x75,0x73,0x65,0x20,0x2a,0x20,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,
    0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x5f,0x34,0x31,0x30,0x29,0x2c,0x20,
    0x30,0x2e,0x30,0x29,0x29,0x20,0x2a,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,
    0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x5f,0x73,0x6d,0x70,0x2c,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x73,0x29,
    0x2e,0x78,0x79,0x7a,0x29,0x20,0x2a,0x20,0x5f,0x34,0x39,0x38,0x29,0x20,0x2b,0x20,
    0x28,0x28,0x28,0x6c,0x69,0x67,0x68,0x74,0x2e,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,
    0x72,0x20,0x2a,0x20,0x70,0x6f,0x77,0x28,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,
    0x76,0x69,0x65,0x77,0x44,0x69,0x72,0x2c,0x20,0x72,0x65,0x66,0x6c,0x65,0x63,0x74,
    0x28,0x2d,0x5f,0x34,0x31,0x30,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x29,
    0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x66,0x73,0x5f,0x6d,0x61,0x74,0x65,0x72,
    0x69,0x61,0x6c,0x5b,0x30,0x5d,0x2e,0x78,0x29,0x29,0x20,0x2a,0x20,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x28,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x5f,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x5f,
    0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x54,0x65,0x78,
    0x43,0x6f,0x6f,0x72,0x64,0x73,0x29,0x2e,0x78,0x79,0x7a,0x29,0x20,0x2a,0x20,0x5f,
    0x34,0x39,0x38,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,
    0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x35,0x31,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x69,0x7a,0x65,0x28,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x36,
    0x33,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x66,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2d,
    0x20,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x64,
    0x69,0x72,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x20,0x3d,0x20,0x67,0x65,0x74,0x5f,0x64,0x69,0x72,0x5f,0x6c,0x69,0x67,0x68,0x74,
    0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x5f,0x35,0x31,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x5f,0x36,0x33,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x72,
    0x65,0x73,0x75,0x6c,0x74,0x20,0x3d,0x20,0x63,0x61,0x6c,0x63,0x44,0x69,0x72,0x4c,
    0x69,0x67,0x68,0x74,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,0x69,0x20,0x3d,0x20,
    0x30,0x3b,0x20,0x69,0x20,0x3c,0x20,0x34,0x3b,0x20,0x69,0x2b,0x2b,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x69,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,
    0x74,0x5f,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,0x67,0x65,
    0x74,0x5f,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x28,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x35,0x20,0x3d,0x20,0x5f,0x35,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x36,0x20,0x3d,0x20,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x20,0x3d,0x20,0x5f,0x36,0x33,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,
    0x20,0x2b,0x3d,0x20,0x63,0x61,0x6c,0x63,0x50,0x6f,0x69,0x6e,0x74,0x4c,0x69,0x67,
    0x68,0x74,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x2c,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x35,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x2c,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x37,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x73,0x70,0x6f,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x74,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x38,0x20,0x3d,0x20,0x67,0x65,0x74,0x5f,0x73,0x70,0x6f,
    0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x39,0x20,0x3d,0x20,0x5f,0x35,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,
    0x20,0x3d,0x20,0x46,0x72,0x61,0x67,0x50,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x31,0x20,0x3d,0x20,0x5f,0x36,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x30,0x37,0x20,0x3d,
    0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x30,0x38,0x20,0x3d,0x20,0x5f,
    0x31,0x30,0x37,0x20,0x2b,0x20,0x63,0x61,0x6c,0x63,0x53,0x70,0x6f,0x74,0x4c,0x69,
    0x67,0x68,0x74,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x2c,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x39,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x2c,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x73,0x75,0x6c,0x74,0x20,0x3d,0x20,0x5f,0x31,0x30,0x38,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,
    0x63,0x34,0x28,0x5f,0x31,0x30,0x38,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x00,
};
/*
    #version 300 es

    uniform vec4 vs_params[12];
    layout(location = 0) in vec3 aPos;

    void main()
    {
        gl_Position = ((mat4(vs_params[8], vs_params[9], vs_params[10], vs_params[11]) * mat4(vs_params[4], vs_params[5], vs_params[6], vs_params[7])) * mat4(vs_params[0], vs_params[1], vs_params[2], vs_params[3])) * vec4(aPos, 1.0);
    }

*/
static const uint8_t light_cube_vs_source_glsl300es[329] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x32,0x5d,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,
    0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x50,0x6f,0x73,0x3b,0x0a,
    0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x28,0x28,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x38,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x39,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x30,
    0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x31,0x5d,
    0x29,0x20,0x2a,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x34,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x35,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x36,
    0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x37,0x5d,0x29,
    0x29,0x20,0x2a,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x31,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,
    0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,
    0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x61,0x50,0x6f,0x73,0x2c,0x20,0x31,
    0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;

    uniform highp vec4 light_cube_fs_params[1];
    layout(location = 0) out highp vec4 FragColor;

    void main()
    {
        FragColor = vec4(light_cube_fs_params[0].xyz, 1.0);
    }

*/
static const uint8_t light_cube_fs_source_glsl300es[229] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x63,0x75,0x62,0x65,0x5f,0x66,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,
    0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,
    0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x46,
    0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,
    0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x46,0x72,0x61,
    0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x6c,0x69,
    0x67,0x68,0x74,0x5f,0x63,0x75,0x62,0x65,0x5f,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x00,
};
static inline const sg_shader_desc* light_cube_shader_desc(sg_backend backend) {
    if (backend == SG_BACKEND_GLCORE) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)light_cube_vs_source_glsl430;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)light_cube_fs_source_glsl430;
            desc.fragment_func.entry = "main";
            desc.attrs[0].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[0].glsl_name = "aPos";
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 192;
            desc.uniform_blocks[0].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[0].glsl_uniforms[0].array_count = 12;
            desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "vs_params";
            desc.uniform_blocks[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[1].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[1].size = 16;
            desc.uniform_blocks[1].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[1].glsl_uniforms[0].array_count = 1;
            desc.uniform_blocks[1].glsl_uniforms[0].glsl_name = "light_cube_fs_params";
            desc.label = "light_cube_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_GLES3) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)light_cube_vs_source_glsl300es;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)light_cube_fs_source_glsl300es;
            desc.fragment_func.entry = "main";
            desc.attrs[0].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[0].glsl_name = "aPos";
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 192;
            desc.uniform_blocks[0].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[0].glsl_uniforms[0].array_count = 12;
            desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "vs_params";
            desc.uniform_blocks[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[1].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[1].size = 16;
            desc.uniform_blocks[1].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[1].glsl_uniforms[0].array_count = 1;
            desc.uniform_blocks[1].glsl_uniforms[0].glsl_name = "light_cube_fs_params";
            desc.label = "light_cube_shader";
        }
        return &desc;
    }
    return 0;
}
static inline const sg_shader_desc* phong_shader_desc(sg_backend backend) {
    if (backend == SG_BACKEND_GLCORE) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)vs_source_glsl430;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)fs_source_glsl430;
            desc.fragment_func.entry = "main";
            desc.attrs[0].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[0].glsl_name = "aPos";
            desc.attrs[1].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[1].glsl_name = "aNormal";
            desc.attrs[2].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[2].glsl_name = "aTexCoords";
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 192;
            desc.uniform_blocks[0].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[0].glsl_uniforms[0].array_count = 12;
            desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "vs_params";
            desc.uniform_blocks[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[1].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[1].size = 16;
            desc.uniform_blocks[1].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[1].glsl_uniforms[0].array_count = 1;
            desc.uniform_blocks[1].glsl_uniforms[0].glsl_name = "fs_params";
            desc.uniform_blocks[2].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[2].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[2].size = 16;
            desc.uniform_blocks[2].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[2].glsl_uniforms[0].array_count = 1;
            desc.uniform_blocks[2].glsl_uniforms[0].glsl_name = "fs_material";
            desc.uniform_blocks[3].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[3].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[3].size = 64;
            desc.uniform_blocks[3].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[3].glsl_uniforms[0].array_count = 4;
            desc.uniform_blocks[3].glsl_uniforms[0].glsl_name = "fs_dir_light";
            desc.uniform_blocks[4].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[4].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[4].size = 320;
            desc.uniform_blocks[4].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[4].glsl_uniforms[0].array_count = 20;
            desc.uniform_blocks[4].glsl_uniforms[0].glsl_name = "fs_point_lights";
            desc.uniform_blocks[5].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[5].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[5].size = 112;
            desc.uniform_blocks[5].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[5].glsl_uniforms[0].array_count = 7;
            desc.uniform_blocks[5].glsl_uniforms[0].glsl_name = "fs_spot_light";
            desc.images[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[0].image_type = SG_IMAGETYPE_2D;
            desc.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[0].multisampled = false;
            desc.images[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[1].image_type = SG_IMAGETYPE_2D;
            desc.images[1].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[1].multisampled = false;
            desc.samplers[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[1].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.image_sampler_pairs[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 0;
            desc.image_sampler_pairs[0].glsl_name = "_diffuse_texture_diffuse_texture_smp";
            desc.image_sampler_pairs[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[1].image_slot = 1;
            desc.image_sampler_pairs[1].sampler_slot = 1;
            desc.image_sampler_pairs[1].glsl_name = "_specular_texture_specular_texture_smp";
            desc.label = "phong_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_GLES3) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)vs_source_glsl300es;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)fs_source_glsl300es;
            desc.fragment_func.entry = "main";
            desc.attrs[0].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[0].glsl_name = "aPos";
            desc.attrs[1].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[1].glsl_name = "aNormal";
            desc.attrs[2].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[2].glsl_name = "aTexCoords";
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 192;
            desc.uniform_blocks[0].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[0].glsl_uniforms[0].array_count = 12;
            desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "vs_params";
            desc.uniform_blocks[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[1].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[1].size = 16;
            desc.uniform_blocks[1].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[1].glsl_uniforms[0].array_count = 1;
            desc.uniform_blocks[1].glsl_uniforms[0].glsl_name = "fs_params";
            desc.uniform_blocks[2].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[2].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[2].size = 16;
            desc.uniform_blocks[2].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[2].glsl_uniforms[0].array_count = 1;
            desc.uniform_blocks[2].glsl_uniforms[0].glsl_name = "fs_material";
            desc.uniform_blocks[3].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[3].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[3].size = 64;
            desc.uniform_blocks[3].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[3].glsl_uniforms[0].array_count = 4;
            desc.uniform_blocks[3].glsl_uniforms[0].glsl_name = "fs_dir_light";
            desc.uniform_blocks[4].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[4].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[4].size = 320;
            desc.uniform_blocks[4].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[4].glsl_uniforms[0].array_count = 20;
            desc.uniform_blocks[4].glsl_uniforms[0].glsl_name = "fs_point_lights";
            desc.uniform_blocks[5].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[5].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[5].size = 112;
            desc.uniform_blocks[5].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[5].glsl_uniforms[0].array_count = 7;
            desc.uniform_blocks[5].glsl_uniforms[0].glsl_name = "fs_spot_light";
            desc.images[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[0].image_type = SG_IMAGETYPE_2D;
            desc.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[0].multisampled = false;
            desc.images[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[1].image_type = SG_IMAGETYPE_2D;
            desc.images[1].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[1].multisampled = false;
            desc.samplers[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[1].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.image_sampler_pairs[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 0;
            desc.image_sampler_pairs[0].glsl_name = "_diffuse_texture_diffuse_texture_smp";
            desc.image_sampler_pairs[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[1].image_slot = 1;
            desc.image_sampler_pairs[1].sampler_slot = 1;
            desc.image_sampler_pairs[1].glsl_name = "_specular_texture_specular_texture_smp";
            desc.label = "phong_shader";
        }
        return &desc;
    }
    return 0;
}
